{"version":3,"sources":["variables/statuses.js","components/Searchbar/Searchbar.jsx","components/ImageGallery/ImageGallery.jsx","components/ImageGallery/ImageGalleryItem/ImageGalleryItem.jsx","components/Button/Button.jsx","components/Modal/Modal.jsx","components/Loader/Loader.jsx","App.js","services/searchService.js","index.js"],"names":["STATUS","PIXABAY_API_KEY","Searchbar","state","searchString","handleOnSubmit","e","preventDefault","props","onSubmit","setState","handleOnChange","target","value","className","this","type","autoComplete","autoFocus","placeholder","onChange","Component","ImageGallery","images","map","id","webformatURL","largeImageURL","onClick","onSelect","ImageGalleryItem","handleOnClick","src","alt","Button","Modal","handleCloseModal","currentTarget","closeModal","onClose","handleEscKey","code","window","addEventListener","removeEventListener","Loader","color","height","width","App","page","status","showButton","largeImageUrl","isLoading","handleSearchbarOnSubmit","handleSelectImage","handleClickLoadMoreButton","prevState","fetch","then","response","ok","json","Promise","reject","Error","fetchImages","hits","length","toast","catch","error","message","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2db2785a.chunk.js","sourcesContent":["export const STATUS = {\r\n  IDLE: \"idle\",\r\n  LOAD: \"load\",\r\n};\r\n\r\nexport const PIXABAY_API_KEY = \"22610775-e91db881e3144bb29f97dd7d0\";\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport class Searchbar extends Component {\r\n  state = {\r\n    searchString: \"\",\r\n  };\r\n\r\n  handleOnSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state.searchString);\r\n    this.setState({ searchString: \"\" });\r\n  };\r\n  handleOnChange = (e) => {\r\n    this.setState({ searchString: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={this.handleOnSubmit}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            onChange={this.handleOnChange}\r\n            value={this.state.searchString}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};\r\n\r\nexport default Searchbar;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { ImageGalleryItem } from \".\";\r\n\r\nexport class ImageGallery extends Component {\r\n  render() {\r\n    const { images } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <ul className=\"ImageGallery\">\r\n          {images.map(({ id, webformatURL, largeImageURL }) => (\r\n            <ImageGalleryItem\r\n              key={id}\r\n              webformatURL={webformatURL}\r\n              largeImageURL={largeImageURL}\r\n              onClick={() => this.props.onSelect(largeImageURL)}\r\n            />\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nImageGallery.propTypes = { images: PropTypes.array };\r\n\r\nexport default ImageGallery;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport class ImageGalleryItem extends Component {\r\n  handleOnClick = (e) => {\r\n    this.props.onClick(this.props.largeImageURL);\r\n  };\r\n  render() {\r\n    const { webformatURL } = this.props;\r\n    return (\r\n      <li className=\"ImageGalleryItem\" onClick={this.handleOnClick}>\r\n        <img src={webformatURL} alt=\"\" className=\"ImageGalleryItem-image\" />\r\n      </li>\r\n    );\r\n  }\r\n}\r\nImageGalleryItem.propTypes = {\r\n  webformatURL: PropTypes.string,\r\n  largeImageURL: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport class Button extends Component {\r\n  render() {\r\n    const { onClick } = this.props;\r\n    return (\r\n      <button className=\"Button\" onClick={onClick}>\r\n        Load more\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func,\r\n};\r\n\r\nexport default Button;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport class Modal extends Component {\r\n  handleCloseModal = (e) => {\r\n    if (e.target === e.currentTarget) {\r\n      this.closeModal();\r\n    }\r\n  };\r\n\r\n  closeModal = () => {\r\n    this.props.onClose();\r\n  };\r\n\r\n  handleEscKey = (e) => {\r\n    if (e.code === \"Escape\") this.closeModal();\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"keydown\", this.handleEscKey);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"keydown\", this.handleEscKey);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Overlay\" onClick={this.handleCloseModal}>\r\n        <div className=\"Modal\">\r\n          <img src={this.props.largeImageURL} alt=\"\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nModal.propTypes = {\r\n  onClose: PropTypes.func,\r\n  largeImageURL: PropTypes.string,\r\n};\r\n\r\nexport default Modal;\r\n","import React, { Component } from \"react\";\r\nimport LoaderSpinner from \"react-loader-spinner\";\r\nexport class Loader extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"Overlay\">\r\n        <LoaderSpinner type=\"Puff\" color=\"#00BFFF\" height={100} width={100} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Loader;\r\n","import React, { Component } from \"react\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { fetchImages } from \"./services/searchService\";\r\nimport Searchbar from \"./components/Searchbar/Searchbar\";\r\nimport { ImageGallery } from \"./components/ImageGallery\";\r\nimport Button from \"./components/Button/Button\";\r\nimport Modal from \"./components/Modal/Modal\";\r\nimport Loader from \"./components/Loader/Loader\";\r\nimport { STATUS } from \"./variables/statuses\";\r\n\r\nexport class App extends Component {\r\n  state = {\r\n    page: 1,\r\n    searchString: \"\",\r\n    images: [],\r\n    status: STATUS.IDLE,\r\n    showButton: false,\r\n    largeImageUrl: null,\r\n    isLoading: false,\r\n  };\r\n\r\n  handleSearchbarOnSubmit = (searchString) => {\r\n    this.setState({\r\n      searchString,\r\n      page: 1,\r\n      images: [],\r\n      status: STATUS.LOAD,\r\n    });\r\n  };\r\n\r\n  handleSelectImage = (largeImageUrl) => {\r\n    this.setState({ largeImageUrl });\r\n  };\r\n\r\n  handleCloseModal = () => {\r\n    this.setState({ largeImageUrl: null });\r\n  };\r\n\r\n  handleClickLoadMoreButton = () => {\r\n    this.setState((prevState) => {\r\n      return { page: prevState.page + 1, status: STATUS.LOAD };\r\n    });\r\n  };\r\n\r\n  componentDidUpdate() {\r\n    const { status, page, searchString } = this.state;\r\n\r\n    if (status === STATUS.LOAD) {\r\n      fetchImages(searchString, page)\r\n        .then((images) => {\r\n          if (images.hits.length === 0 && page === 1) {\r\n            toast(`No images by string \"${searchString}\"`);\r\n            this.setState({ status: STATUS.IDLE, showButton: false });\r\n            return;\r\n          }\r\n\r\n          const showButton = images.hits.length === 12;\r\n          if (!showButton) {\r\n            toast(\"It`s all\");\r\n          }\r\n          this.setState({\r\n            images: [...this.state.images, ...images.hits],\r\n            status: STATUS.IDLE,\r\n            showButton,\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          toast.error(error.message);\r\n        });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { status, showButton, largeImageUrl, images } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Searchbar onSubmit={this.handleSearchbarOnSubmit}></Searchbar>\r\n\r\n        <ImageGallery images={images} onSelect={this.handleSelectImage} />\r\n        {status === STATUS.LOAD && <Loader />}\r\n        {showButton && <Button onClick={this.handleClickLoadMoreButton} />}\r\n        {largeImageUrl && (\r\n          <Modal\r\n            largeImageURL={largeImageUrl}\r\n            onClose={this.handleCloseModal}\r\n          />\r\n        )}\r\n        <ToastContainer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { PIXABAY_API_KEY } from \"../variables/statuses\";\r\n\r\nexport const fetchImages = (searchString, page = 1) => {\r\n  return fetch(\r\n    `https://pixabay.com/api/?q=${searchString}&page=${page}&key=${PIXABAY_API_KEY}&image_type=photo&orientation=horizontal&per_page=12`\r\n  ).then((response) => {\r\n    if (response.ok) {\r\n      return response.json();\r\n    }\r\n    return Promise.reject(new Error(`No images with string \"${searchString}\"`));\r\n  });\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}